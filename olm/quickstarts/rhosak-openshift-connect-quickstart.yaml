apiVersion: console.openshift.io/v1
kind: ConsoleQuickStart
metadata:
  name: rhosak-devsandbox-connect-cli-toolscontainer-quickstart
spec:
  displayName: Connecting OpenShift to Red Hat OpenShift Streams for Apache Kafka using the CLI
  tags:
    - streams
    - kafka
  durationMinutes: 10
  description: Connecting an OpenShift project to Red Hat OpenShift Streams for Apache Kafka using the RHOAS CLI
  prerequisites:
    - You have a Red Hat account.
    - You’ve created a Kafka instance in [Streams for Apache Kafka](https://cloud.redhat.com/beta/application-services/streams/) and the instance is in the **Ready** state.
    - You can access your OpenShift cluster with the `dedicated-admin` role (OpenShift Dedicated) or `cluster-admin` role.

  introduction: |-
    ### This quick start shows how to use the Red Hat OpenShift Application Services (RHOAS) CLI to connect a project in an OpenShift cluster to Red Hat OpenShift Streams for Apache Kafka.

    As a developer of applications and services, you can connect applications running on OpenShift to Kafka instances in Streams for Apache Kafka. Using an Operator to provide an application on OpenShift with the parameters required to connect to a Kafka instance in Streams for Apache Kafka is called *service binding*.

    Before you can bind a particu application on OpenShift to a Kafka instance, you need to connect the Kafka instance to the appropriate project in your OpenShift cluster. To make this connection, you can use the Red Hat OpenShift Application Services (RHOAS) Operator and CLI.

    #### Prerequisites
    - You have a Red Hat account.
    - You’ve created a Kafka instance in [Streams for Apache Kafka](https://cloud.redhat.com/beta/application-services/streams/) and the instance is in the **Ready** state.
    - You can access your OpenShift cluster with the `dedicated-admin` role (OpenShift Dedicated) or `cluster-admin` role.

  tasks:
    - title: Installing the required CLI tools
      description: |-
        In this task, you'll use an image provided by Streams for Apache Kafka to install the CLI tools required to complete the quick start. Specifically, you'll install the following tools in a project in your OpenShift cluster:

        * The Red Hat OpenShift Application Services (RHOAS) CLI (`rhoas`)
        * The OpenShift CLI (`oc`)
        * The OpenShift Developer CLI (`odo`)

        Alternatively, you can install the CLI tools locally on your machine. For instructions on installing the tools, see:

        * [Installing the RHOAS CLI](https://access.redhat.com/documentation/en-us/red_hat_openshift_streams_for_apache_kafka/1/guide/f520e427-cad2-40ce-823d-96234ccbc047#_8818f0d5-ae20-42c8-9622-a98e663ff1a8)
        * [Installing the OpenShift CLI](https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html#installing-openshift-cli)
        * [Installing the OpenShift Developer CLI (odo)](https://docs.openshift.com/container-platform/4.7/cli_reference/developer_cli_odo/installing-odo.html)

        **NOTE**: If you've installed the CLI tools locally on your machine, or you previously installed the image provided by Streams for Apache Kafka, you don't need to complete the remainder of this task. Click **Next** to skip to the next task in the quick start.

        #### Prerequisites
         - You can access your OpenShift cluster with privileges to create a new project.

        #### Procedure

        1. Ensure that you're logged in to the OpenShift web console as a user who has privileges to create a new project in the cluster.

        1. Click the [perspective switcher]{{highlight qs-perspective-switcher}}. Switch to the **Developer** perspective.
           The **Topology** page opens.

        1. Create a new project.

            i. At the top of the **Topology** page, click the **Project** drop-down menu. Select **Create Project**.

            ii. In the **Name** field of the **Create Project** dialog box, enter a unique name, for example, `my-project`.

            iii. (Optional) Add details for **Display name** and **Description**.

            iv. Click **Create**.

        1. Deploy the CLI tools image provided by Streams for Apache Kafka.

            i. Click [Add]{{highlight qs-nav-add}}.

            ii. On the **Add** page, click **Container images**.
                 The **Deploy Image** page opens.

            iii. For the **Image name from external registry** option, enter `quay.io/rhosak/rhoas-tools`.

            iv. For the **Runtime icon** option, select `openshift`.

            v. Under **Advanced Options**, *deselect* the **Create a route to the Application** check box. For all other options, keep the default values.

            vi. Click **Create**.
                The **Topology** page opens.
                You should see an icon for the tools application you created. After some time, the icon should have a dark blue circle. This indicates that OpenShift deployed the application successfully.

        1. Click the icon for the tools application.
           A sidebar opens, with the **Resources** tab displayed. Under **Pods**, you should see a single Pod, corresponding to the tools application.

        1. Click the link to the Pod.
           The **Pod details** page opens.

        1. Click the **Terminal** tab.
           A command-line window opens inside the Pod.

        1. To check whether you can access the required tools, on the command line, enter `rhoas`.
           The `rhoas` command should show help text for the RHOAS CLI.

      review:
        instructions: |-
          #### Verify that you successfully installed the CLI tools
           * Did you you see the RHOAS CLI help text on the command line of the Pod for the tools application?
        failedTaskHelp: This task isn’t verified yet. Try the task again.

      summary:
        success: >-
            You've installed the required CLI tools. You're ready to verify connection between the RHOAS Operator and your OpenShift cluster.
        failed: Try the steps again.

    - title: Installing the RHOAS Operator
      description: |-
        The Red Hat OpenShift Application Services (RHOAS) Operator enables you to expose a Kafka instance in Streams for Apache Kafka to an OpenShift cluster.

        In this task, you'll install the RHOAS Operator in your OpenShift cluster.

        After you install the RHOAS Operator, you can use the RHOAS CLI to connect a specified Kafka instance to the cluster. You can then work directly with the Kafka instance using standard OpenShift features and APIs.

        #### Prerequisites
         - You can access your OpenShift cluster with the `dedicated-admin` role (OpenShift Dedicated) or `cluster-admin` role.

        #### Procedure

        1. Ensure that you're logged in to the OpenShift web console with the `dedicated-admin` role (OpenShift Dedicated) or `cluster-admin` role.

        1. Click the [perspective switcher]{{highlight qs-perspective-switcher}}.  Switch to the **Administrator** perspective.

        1. In the left menu, click **Operators** > **OperatorHub**.

        1. In the **Filter by keyword** field, enter `RHOAS`.

        1. Select the **OpenShift Application Services (RHOAS)** Operator.

        1. If you see a dialog box entitled **Show community Operator**, review the included information. When you're ready, click **Continue**.
           An information sidebar for the RHOAS Operator opens.

          1. In the sidebar, review the information about the RHOAS Operator and then click **Install**.
             The **Install Operator** page opens.

        1. On the **Install Operator** page, for the **Installation mode** option, ensure that `All namespaces on the cluster` is selected. Keep all other default values.

        1. Click **Install**.
           When the installation process is finished, click **View Operator** to see the Operator details.
           Observe that the RHOAS Operator is installed in the `openshift-operators` namespace by default.

      review:
        instructions: |-
          #### Verify that you successfully installed the RHOAS Operator
           * Is the RHOAS Operator listed on the **Installed Operators** page?
        failedTaskHelp: This task isn’t verified yet. Try the task again.

      summary:
        success: >-
            You've successfully installed the RHOAS Operator. You're now ready to install the CLI tools required to complete this quick start.
        failed: Try the steps again.

    - title: Checking RHOAS Operator connection to your OpenShift cluster
      description: |-
        In previous tasks, you installed the RHOAS Operator and required CLI tools. In this task, you'll check whether the RHOAS Operator is working by using the RHOAS CLI to connect to the OpenShift cluster and retrieve the cluster status.

        **NOTE**: By default, when you use the `rhoas login` command to log in to the RHOAS CLI, the CLI starts a sign-in flow in your web browser. However, the command line in the Pod for your tools application does not have access to a browser. Therefore, in this task,
        you'll log in to the RHOAS CLI using a token.

        #### Prerequisites
         - You've installed the required CLI tools.
         - You've installed the RHOAS Operator.

        #### Procedure

        1. In your web browser, open the [OpenShift Cluster Manager API Token](https://cloud.redhat.com/openshift/token) page. Copy the access token shown.

        1. In the OpenShift web console, click the [perspective switcher]{{highlight qs-perspective-switcher}}. Switch to the **Developer** perspective.
           The **Topology** page opens.

        1. Ensure that the current OpenShift project is the one you created earlier in this quick start.

            i. At the top of the **Topology** page, click the **Project** drop-down menu.

            ii. Select the project that you previously created.

        1. In the Pod for your tools application, open a command-line window, as described earlier in this quick start.

        1. Log in to the RHOAS CLI using the token you copied.

           ```
           $ rhoas login --token=<token>
           ```
           In the preceding example, replace `<token>` with the token value that you copied. To paste the value that you copied, right-click on the command line and select **Paste**.

           When you press **Enter**, you should see a response confirming that you're logged in.

        1. Use the RHOAS CLI to connect to your OpenShift cluster and retrieve the cluster status.

           ```
           $ rhoas cluster status
           Namespace: my-project
           RHOAS Operator: Installed
           ```
           As shown in the output, the RHOAS CLI indicates that the RHOAS Operator was successfully installed. The CLI also retrieves the name of the current OpenShift project (namespace). In this example, the current project is called `my-project`.

      review:
        instructions: |-
          #### Verify connection between the RHOAS Operator and your OpenShift cluster
          * Did you see `RHOAS Operator: Installed` when you executed the `rhoas cluster status` command?
          * Did you see the current OpenShift namespace listed when you executed the `rhoas cluster status` command?
        failedTaskHelp: This task isn't verified yet. Try the task again.
      summary:
        success: >-
          You've verified that the RHOAS Operator is connected to your OpenShift cluster. You're now ready to connect a Kafka instance to the cluster.
        failed: Try the steps again.

    - title: Connecting a Kafka instance to your OpenShift cluster
      description: |
        In the previous task, you verified connection from the RHOAS Operator to your OpenShift cluster. You're now ready to connect a Kafka instance in Streams for Apache Kafka to the current project in the cluster.

        #### Prerequisites

        - You’ve created a Kafka instance in [Streams for Apache Kafka](https://cloud.redhat.com/beta/application-services/streams/) and the instance is in the **Ready** state.
        - You've verified connection between the RHOAS Operator and your OpenShift cluster.
        - You have an API token to connect to your Kafka instance. To get a token, see the [OpenShift Cluster Manager API Token](https://cloud.redhat.com/openshift/token) page.

        #### Procedure

        1. In the OpenShift web console, click the [perspective switcher]{{highlight qs-perspective-switcher}}. Ensure that you're using the **Developer** perspective.

        1. Click [Topology]{{highlight qs-nav-topology}}.

        1. Ensure that the current OpenShift project is the one you created earlier in this quick start.

            i. At the top of the **Topology** page, click the **Project** drop-down menu.

            ii. Select the project that you previously created.

        1. In the Pod for your tools application, open a command-line window, as described earlier in this quick start.

        1. Use the RHOAS CLI to connect a Kafka instance in Streams for Apache Kafka to the current OpenShift project.

           ```
           $ rhoas cluster connect --ignore-context
           ```
           You're prompted to specify the Kafka instance that you want to connect to OpenShift.

        1. Type the name of the Kafka instance that you want to connect to OpenShift. Press **Enter**.
           You should see output like the following:

           ```
           Connection Details:
           Apache Kafka instance:  my-kafka-instance
           Kubernetes Namespace:   my-project
           Service Account Secret: rh-cloud-services-service-account
           ```

        1. Verify the connection details shown by the RHOAS CLI. When you're ready to continue, type `y` and then press **Enter**.
           You're prompted to provide an access token. The RHOAS Operator requires this token to make a connection to your Kafka instance.

        1. In your web browser, open the [OpenShift Cluster Manager API Token](https://cloud.redhat.com/openshift/token) page. Copy the access token shown.

        1. On the command line, right-click and select **Paste**. Press **Enter**.
           The RHOAS Operator uses the token to create a `KafkaConnection` resource on your OpenShift cluster. When this process is complete, you should see lines like the following:

           ```
           KafkaConnection resource "my-kafka-instance" has been created
           Waiting for status from KafkaConnection resource.
           Created KafkaConnection can be injected into your application.
           ...
           KafkaConnection successfully installed on your cluster.
           ```

        1. Use the OpenShift CLI to verify that the RHOAS Operator successfully created the connection.

           ```
           $ oc get KafkaConnection

           NAME   		         AGE
           my-kafka-instance     2m35s
           ```
           As shown in the output, the RHOAS Operator creates a `KafkaConnection` resource that matches the name of your Kafka instance. In this example, the resource name matches a Kafka instance called `my-kafka-instance`.

      review:
        instructions: |-
          #### Verify that you've successfully connected to a Kafka instance in Streams for Apache Kafka
          * Did you see a `KafkaConnection` resource listed when you executed the `oc get KafkaConnection` command?
        failedTaskHelp: This task isn’t verified yet. Try the task again.
      summary:
        success: >-
          You've connected your Kafka instance to a project in your OpenShift cluster.
        failed: Try the steps again.

    - title: Inspecting the Kafka connection parameters
      description: |-
        With your Kafka instance connected to a project in your OpenShift cluster, you're ready to bind applications in the project to the Kafka instance.
        In general, you can do this in one of these ways:
        * Inspecting the connection parameters for your Kafka instance and manually configuring an application to connect to the instance.
        * Using Operator functionality to bind your application to the the Kafka instance and having connection parameters automatically injected into the application.

        In this task, you'll inspect the connection parameters required to *manually* connect an application to your Kafka instance.

        #### Prerequisites
         - You've connected your Kafka instance to a project in your OpenShift cluster.

        #### Procedure

        1. In the OpenShift web console, click the [perspective switcher]{{highlight qs-perspective-switcher}}. Ensure that you're using the the **Developer** perspective.

        1. Click [Topology]{{highlight qs-nav-topology}}.

        1. Ensure that the current OpenShift project is the one you created earlier in this quick start.

            i. At the top of the **Topology** page, click the **Project** drop-down menu.

            ii. Select the project that you previously created.

        1. In the Pod for your tools application, open a command-line window, as described earlier in this quick start.

        1. Use the OpenShift CLI to get the name of the `KafkaConnection` resource created in the previous task.

           ```
           $ oc get KafkaConnection
           ```

        1. Use the OpenShift CLI to retrieve the details of the `KafkaConnection` resource.

           ```
           $ oc describe KafkaConnection/<kafka-connection-name>
           ```

           In the preceding example, replace `<kafka-connection-name>` with the name of your `KafkaConnection` resource. When you press **Enter**, the output shows detailed information for the `KafkaConnection` resource.

        1. To *manually* configure an application to connect to the Kafka instance, collect the following required connection details:

            * **Bootstrap Server Host:**Bootstrap server endpoint of the Kafka instance, in the format of `<host name>:<port>`
            * **Sasl Mechanism:** Simple Authentication and Security Layer (SASL) mechanism used by the Kafka instance for client authentication
            * **Security Protocol:** Protocol used by the Kafka instance to secure client connections
            * **Service Account Secret:** Name of the secret that contains the client ID and client secret required to connect to the Kafka instance

      review:
        instructions: |-
          #### Verify that you've collected the details required to manually configure an application to connect to your Kafka instance
          * Did you find the **Bootstrap Server Host** field, with a value in the format of `<host name>:<port>`?
          * Did you identify the authentication mechanism (`PLAIN` or `BEARER`) that the Kafka instance is using?
          * Did you identify the security mechanism (`SASL_PLAINTEXT` or `SASL_SSL`) that the Kafka instance is using?
          * Did you find the name of the service account secret, in which the client ID and client secret are stored?
        failedTaskHelp: This task isn't verified yet. Try the task again.
      summary:
        success: >-
         You've collected the connection details you need to manually configure an application in your OpenShift project to connect to your Kafka instance.
        failed: Try the steps again.
  conclusion: >-
    Congratulations! You successfully connected a Kafka instance in Streams for Apache Kafka to a project in your OpenShift cluster.
    You're now ready to bind applications in the project to the Kafka instance.
  nextQuickStart:
    - rhosak-devsandbox-quarkus-bind-cli-toolscontainer-quickstart
